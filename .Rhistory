bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of Reactor Types",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
# Créer un graphique en barre avec ggplot2
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))  # Faire pivoter les légendes en x
ReactorType
Capacity
}
main()
View(main)
main <- function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of Reactor Types",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() + # a bar graph
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))  # pivot the x legend
ReactorType
Capacity
}
main <- function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of Reactor Types",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
ReactorType
Capacity
}
main()
main <- function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of Reactor Types",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
ReactorType
}
main()
main <- function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- ggplot(df, aes(x = Capacity, fill = Capacity)) +
geom_bar() +
labs(title = "Distribution of Reactor Types",
x = "Capacity",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$Capacity))))  # Set bar color
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
Capacity
}
main()
main <- function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- ggplot(df, aes(x = Capacity, fill = Capacity)) +
geom_histogram() +
labs(title = "Distribution of Reactor Types",
x = "Capacity",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$Capacity))))  # Set bar color
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
Capacity
}
main()
main <- function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- ggplot(df, aes(x = Capacity)) +
geom_histogram() +
labs(title = "Distribution of Reactor Types",
x = "Capacity",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$Capacity))))  # Set bar color
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
Capacity
}
main()
main <- function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- Capacity <- ggplot(df, aes(x = Capacity)) +
geom_histogram(fill = bar_color, color = "black", binwidth = 10) +
labs(title = "Distribution of Reactor Capacity",
x = "Capacity",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black"))
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
Capacity
}
main()
main <- function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- Capacity <- ggplot(df, aes(x = Capacity)) +
geom_histogram(fill = bar_color, color = "black", binwidth = 20) +
labs(title = "Distribution of Reactor Capacity",
x = "Capacity",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black"))
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
Capacity
}
main()
main <- function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- Capacity <- ggplot(df, aes(x = Capacity)) +
geom_histogram(fill = bar_color, color = "black", binwidth = 30) +
labs(title = "Distribution of Reactor Capacity",
x = "Capacity",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black"))
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
Capacity
}
main()
View(main)
system("git init")
system("git add .")
system('git commit -m "Premier commit"')
system('git config --global user.email "brieuc060303@gmail.com"')
system('git config --global user.name "Brieuc"')
system('git commit -m "Premier commit"')
system('git remote add origin git@github.com:brieuc060303/R.git')
system('git remote set-url origin git@github.com:brieuc060303/R.git')
system('git push -u origin master')
system('git remote add origin https://github.com/brieuc060303/R.git')
system('git remote set-url origin https://github.com/brieuc060303/R.git')
system('git push -u origin master')
View(main)
main
install.packages("leaflet")
library(leaflet)
ma_carte <- leaflet() %>%
setView(lng = 0, lat = 0, zoom = 2)
for (i in 1:nrow(df)) {
ma_carte <- ma_carte %>%
addMarkers(
lng = df$Longitude[i],
lat = df$Latitude[i],
popup = df$Name[i]
)
}
ma_carte
library(shiny)
df %>% group_by(OperationalFrom_Year, isStillOperational) %>% summarise(count=n()) %>%
ggplot(aes(x= OperationalFrom_Year,y=count)) + geom_histogram(aes(fill= isStillOperational), stat='identity') +
theme_fivethirtyeight(12) +
scale_fill_manual(name='', values=c("OPERATING"="darkgreen","DECOMMISSIONED"="darkred")) + geom_vline(xintercept=1986,color='black') + geom_vline(xintercept=2011,color='black') + labs(title='Operational Dates of nuclear power plants', subtitle='') + ggplot2::annotate("text",x=1989,y=45,label='Tchernobyl') + ggplot2::annotate("text",x=2014,y=45,label='Fukushima')
library(ggplot2)
library(dplyr)
library(ggthemes)
df %>% group_by(OperationalFrom_Year, isStillOperational) %>% summarise(count=n()) %>%
ggplot(aes(x= OperationalFrom_Year,y=count)) + geom_histogram(aes(fill= isStillOperational), stat='identity') +
theme_fivethirtyeight(12) +
scale_fill_manual(name='', values=c("OPERATING"="darkgreen","DECOMMISSIONED"="darkred")) + geom_vline(xintercept=1986,color='black') + geom_vline(xintercept=2011,color='black') + labs(title='Operational Dates of nuclear power plants', subtitle='') + ggplot2::annotate("text",x=1989,y=45,label='Tchernobyl') + ggplot2::annotate("text",x=2014,y=45,label='Fukushima')
df$isStillOperational <- ifelse(df$OperationalTo =='','OPERATING','DECOMMISSIONED')
df$OperationalFrom_Date <- as.Date(df$OperationalFrom)
df$OperationalFrom_Year <- year(df$OperationalFrom_Date)
library(skimr)
library(lubridate)
df$isStillOperational <- ifelse(df$OperationalTo =='','OPERATING','DECOMMISSIONED')
df$OperationalFrom_Date <- as.Date(df$OperationalFrom)
df$OperationalFrom_Year <- year(df$OperationalFrom_Date)
df$OperationalTo_Date <- as.Date(df$OperationalTo)
df$OperationalTo_Year <- year(df$OperationalTo_Date)
df$OperationalLife <- df$OperationalTo_Year - df$OperationalFrom_Year
df$DescriptionReactor <- ifelse(is.na(df$DescriptionReactor),'UNKNOWN', df$DescriptionReactor)
View(import)
import <- function() {
library(ggplot2)
library(dplyr)
library(lubridate)
df <- read.csv('nuclear_power_plants.csv', sep = ';')
df$ReactorType <- as.factor(df$ReactorType)  # Convert in factor
df$Status <- as.factor(df$Status) # Convert in factor
df$isStillOperational <- ifelse(df$OperationalTo =='','OPERATING','DECOMMISSIONED')
df$OperationalFrom_Date <- as.Date(df$OperationalFrom)
df$OperationalFrom_Year <- year(df$OperationalFrom_Date)
df$OperationalTo_Date <- as.Date(df$OperationalTo)
df$OperationalTo_Year <- year(df$OperationalTo_Date)
df$OperationalLife <- df$OperationalTo_Year - df$OperationalFrom_Year
df$DescriptionReactor <- ifelse(is.na(df$DescriptionReactor),'UNKNOWN', df$DescriptionReactor)
return(df)
}
df %>% group_by(OperationalFrom_Year, isStillOperational) %>% summarise(count=n()) %>%
ggplot(aes(x= OperationalFrom_Year,y=count)) + geom_histogram(aes(fill= isStillOperational), stat='identity') +
theme_fivethirtyeight(12) +
scale_fill_manual(name='', values=c("OPERATING"="darkgreen","DECOMMISSIONED"="darkred")) + geom_vline(xintercept=1986,color='black') + geom_vline(xintercept=2011,color='black') + labs(title='Operational Dates of nuclear power plants', subtitle='') + ggplot2::annotate("text",x=1989,y=45,label='Tchernobyl') + ggplot2::annotate("text",x=2014,y=45,label='Fukushima')
df %>% group_by(OperationalFrom_Year, isStillOperational) %>% summarise(count=n()) %>%
ggplot(aes(x= OperationalFrom_Year,y=count)) + geom_histogram(aes(fill= isStillOperational), stat='identity') +
scale_fill_manual(name='', values=c("OPERATING"="darkgreen","DECOMMISSIONED"="darkred")) + geom_vline(xintercept=1986,color='black') + geom_vline(xintercept=2011,color='black') + labs(title='Operational Dates of nuclear power plants', subtitle='') + ggplot2::annotate("text",x=1989,y=45,label='Tchernobyl') + ggplot2::annotate("text",x=2014,y=45,label='Fukushima')
View(main)
function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- Capacity <- ggplot(df, aes(x = Capacity)) +
geom_histogram(fill = bar_color, color = "black", binwidth = 30) +
labs(title = "Distribution of Reactor Capacity",
x = "Capacity",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black"))
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
}
function() {
df <- import()
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- Capacity <- ggplot(df, aes(x = Capacity)) +
geom_histogram(fill = bar_color, color = "black", binwidth = 30) +
labs(title = "Distribution of Reactor Capacity",
x = "Capacity",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black"))
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(title = "Distribution of type of Reactors in the world",
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
operation <- df %>% group_by(OperationalFrom_Year, isStillOperational) %>% summarise(count=n()) %>%
+     ggplot(aes(x= OperationalFrom_Year,y=count)) + geom_histogram(aes(fill= isStillOperational), stat='identity') +
+     scale_fill_manual(name='', values=c("OPERATING"="darkgreen","DECOMMISSIONED"="darkred")) + geom_vline(xintercept=1986,color='black') + geom_vline(xintercept=2011,color='black') + labs(title='Operational Dates of nuclear power plants', subtitle='') + ggplot2::annotate("text",x=1989,y=45,label='Tchernobyl') + ggplot2::annotate("text",x=2014,y=45,label='Fukushima')
}
View(import)
import <- function() {
library(ggplot2)
library(dplyr)
library(lubridate)
library(shiny)
library(leaflet)
df <- read.csv('nuclear_power_plants.csv', sep = ';')
df$ReactorType <- as.factor(df$ReactorType)  # Convert in factor
df$Status <- as.factor(df$Status) # Convert in factor
df$isStillOperational <- ifelse(df$OperationalTo =='','OPERATING','DECOMMISSIONED')
df$OperationalFrom_Date <- as.Date(df$OperationalFrom)
df$OperationalFrom_Year <- year(df$OperationalFrom_Date)
df$OperationalTo_Date <- as.Date(df$OperationalTo)
df$OperationalTo_Year <- year(df$OperationalTo_Date)
df$OperationalLife <- df$OperationalTo_Year - df$OperationalFrom_Year
df$DescriptionReactor <- ifelse(is.na(df$DescriptionReactor),'UNKNOWN', df$DescriptionReactor)
return(df)
}
ui <- fluidPage(
titlePanel("Dashboard avec carte leaflet"),
leafletOutput("ma_carte")
)
server <- function(input, output) {
output$ma_carte <- renderLeaflet({
ma_carte <- leaflet() %>%
setView(lng = 0, lat = 0, zoom = 2)
for (i in 1:nrow(df)) {
ma_carte <- ma_carte %>%
addMarkers(
lng = df$Longitude[i],
lat = df$Latitude[i],
popup = df$Name[i]
)
}
ma_carte
})
}
shinyApp(ui, server)
ma_carte <- leaflet(options = leafletOptions(preferCanvas = TRUE)) %>%
setView(lng = 0, lat = 0, zoom = 2) %>%
addTiles(urlTemplate = "http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png")
shinyApp(ui, server)
main()
View(main)
main()
