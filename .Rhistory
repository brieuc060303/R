background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar .nav > li > a {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .nav > li > a:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
")),
tabItems(
tabItem(
tabName = "tabCapacity",
fluidRow(
box(
plotOutput("plotCapacity"),
title = "Graphique de la Capacité du Réacteur",
width = 12
)
)
),
tabItem(
tabName = "tabReactor",
fluidRow(
box(
plotOutput("plotReactor"),
title = "Graphique du Type de Réacteur",
width = 12
)
)
)
)
)
main()
body <- dashboardBody(
tags$style(HTML("
body {
background-color: #00141F; /* Darker navy */
}
.skin-blue .main-header .logo {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar .nav > li > a {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .nav > li > a:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
")),
tabItems(
tabItem(
tabName = "tabCapacity",
fluidRow(
box(
plotOutput("plotCapacity"),
title = "Graphique de la Capacité du Réacteur",
width = 12
)
)
),
tabItem(
tabName = "tabReactor",
fluidRow(
box(
plotOutput("plotReactor"),
title = "Graphique du Type de Réacteur",
width = 12
)
)
)
)
)
body <- dashboardBody(
tags$style(HTML("
body {
background-color: #00141F; /* Darker navy */
}
.skin-blue .content-wrapper{
background-color: #00141F;
}
.skin-blue .main-header .logo {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar .nav > li > a {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .nav > li > a:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
")),
tabItems(
tabItem(
tabName = "tabCapacity",
fluidRow(
box(
plotOutput("plotCapacity"),
title = "Graphique de la Capacité du Réacteur",
width = 12
)
)
),
tabItem(
tabName = "tabReactor",
fluidRow(
box(
plotOutput("plotReactor"),
title = "Graphique du Type de Réacteur",
width = 12
)
)
)
)
)
main''
main()
capacityPlot <- function(){
# Exclure les lignes avec NA dans ReactorType
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
Capacity <- Capacity <- ggplot(df, aes(x = Capacity)) +
geom_histogram(fill = bar_color, color = "black", binwidth = 30) +
labs(
x = "Capacity",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black"))
return(Capacity)
}
body <- dashboardBody(
tags$style(HTML("
body {
background-color: #00141F; /* Darker navy */
}
.skin-blue .content-wrapper{
background-color: #00141F;
}
.skin-blue .main-header .logo {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar .nav > li > a {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .nav > li > a:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
")),
tabItems(
tabItem(
tabName = "tabCapacity",
fluidRow(
box(
plotOutput("plotCapacity"),
title = "Distribution of Reactor Capacity",
width = 12
)
)
),
tabItem(
tabName = "tabReactor",
fluidRow(
box(
plotOutput("plotReactor"),
title = "Distribution of Reactor Types",
width = 12
)
)
)
)
)
main()
View(reactorType)
reactorType <- function(){
df <- na.omit(df)
# Define colors
bar_color <- "#66C5CC"  # rgb(102, 197, 204)
background_color <- "#FCF8F4"  # rgba(252,248,244,1.00)
ReactorType <- ggplot(df, aes(x = ReactorType, fill = ReactorType)) +
geom_bar() +
labs(
x = "Reactor Type",
y = "Frequency") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_rect(fill = background_color),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black"),
axis.text = element_text(color = "black")) +
scale_fill_manual(values = rep(bar_color, length(unique(df$ReactorType))))  # Set bar color
return(ReactorType)
}
main()
View(sideBard)
sideBard <- dashboardSidebar(
sidebarMenu(
menuItem("reactors' capacity", tabName = "tabCapacity"),
menuItem("reactor types", tabName = "tabReactor"),
menuItem("reactors' map", tabName = "mapReactor")
)
),
sideBar <- dashboardSidebar(
sidebarMenu(
menuItem("reactors' capacity", tabName = "tabCapacity"),
menuItem("reactor types", tabName = "tabReactor"),
menuItem("reactors' map", tabName = "mapReactor")
)
)
main <- function(){
df <- import()
ui <- dashboardPage(header,sideBar,body)
shinyApp(ui, server)
}
rm(sideBard)
main()
sideBar <- dashboardSidebar(
sidebarMenu(
menuItem("Reactors' capacity", tabName = "tabCapacity"),
menuItem("Reactor types", tabName = "tabReactor"),
menuItem("Reactors' map", tabName = "mapReactor")
)
)
install.packages("shinydashboardPlus")
View(import)
import <- function() {
library(ggplot2)
library(dplyr)
library(lubridate)
library(shiny)
library(leaflet)
library(shinydashboard)
library(shinydashboardPlus)
df <- read.csv('nuclear_power_plants.csv', sep = ';')
df$ReactorType <- as.factor(df$ReactorType)  # Convert in factor
df$Status <- as.factor(df$Status) # Convert in factor
df$isStillOperational <- ifelse(df$OperationalTo =='','OPERATING','DECOMMISSIONED')
df$OperationalFrom_Date <- as.Date(df$OperationalFrom)
df$OperationalFrom_Year <- year(df$OperationalFrom_Date)
df$OperationalTo_Date <- as.Date(df$OperationalTo)
df$OperationalTo_Year <- year(df$OperationalTo_Date)
df$OperationalLife <- df$OperationalTo_Year - df$OperationalFrom_Year
#df$DescriptionReactor <- ifelse(is.na(df$DescriptionReactor),'UNKNOWN', df$DescriptionReactor)
return(df)
}
library(shinydashboardPlus)
sideBar <- dashboardSidebar(
sidebarMenu(
menuItem("Reactors' Capacity", tabName = "tabCapacity", icon = icon("bar-chart")),
menuItem("Reactor Types", tabName = "tabReactor", icon = icon("bar-chart")),
menuItem("Reactors' Map", tabName = "mapReactor", icon = icon("map"))
)
)
main()
ma_carte <- leaflet(df) %>%
addTiles() %>%  # Ajouter des tuiles de carte
addMarkers(
lng = ~Longitude,  # Colonne Longitude
lat = ~Latitude,   # Colonne Latitude
popup = ~Name      # Colonne Name pour le texte de la popup
)
import())
import()
ma_carte <- leaflet(df) %>%
addTiles() %>%  # Ajouter des tuiles de carte
addMarkers(
lng = ~Longitude,  # Colonne Longitude
lat = ~Latitude,   # Colonne Latitude
popup = ~Name      # Colonne Name pour le texte de la popup
)
ma_carte
reactorMap <- leaflet(df) %>%
addTiles() %>%  # add tiles
addMarkers(
lng = ~Longitude,  # Longitude
lat = ~Latitude,   # Latitude
popup = ~Name      # Name for the popup
)
rm(ma_carte)
body <- dashboardBody(
tags$style(HTML("
body {
background-color: #00141F; /* Darker navy */
}
.skin-blue .main-header .logo {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar .nav > li > a {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .nav > li > a:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
")),
tabItems(
tabItem(
tabName = "tabCapacity",
fluidRow(
box(
plotOutput("plotCapacity"),
title = "Graphique de la Capacité du Réacteur",
width = 12
)
)
),
tabItem(
tabName = "tabReactor",
fluidRow(
box(
plotOutput("plotReactor"),
title = "Graphique du Type de Réacteur",
width = 12
)
)
),
tabItem(
tabName = "mapReactor"
fluidRow(
body <- dashboardBody(
tags$style(HTML("
body {
background-color: #00141F; /* Darker navy */
}
.skin-blue .main-header .logo {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar .nav > li > a {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .nav > li > a:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
")),
tabItems(
tabItem(
tabName = "tabCapacity",
fluidRow(
box(
plotOutput("plotCapacity"),
title = "Graphique de la Capacité du Réacteur",
width = 12
)
)
),
tabItem(
tabName = "tabReactor",
fluidRow(
box(
plotOutput("plotReactor"),
title = "Graphique du Type de Réacteur",
width = 12
)
)
),
tabItem(
tabName = "mapReactor",
fluidRow(
box(
leafletOutput("reactorMap"),
title = "Reactor Map",
width = 12
)
)
)
)
)
)
body <- dashboardBody(
tags$style(HTML("
body {
background-color: #00141F; /* Darker navy */
}
.skin-blue .main-header .logo {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar {
background-color: #005C8E; /* Darker blue */
}
.skin-blue .main-header .navbar .nav > li > a {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .nav > li > a:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle {
color: #ffffff; /* White */
}
.skin-blue .main-header .navbar .sidebar-toggle:hover {
background: #005C8E; /* Darker blue */
color: #ffffff; /* White */
}
")),
tabItems(
tabItem(
tabName = "tabCapacity",
fluidRow(
box(
plotOutput("plotCapacity"),
title = "Graphique de la Capacité du Réacteur",
width = 12
)
)
),
tabItem(
tabName = "tabReactor",
fluidRow(
box(
plotOutput("plotReactor"),
title = "Graphique du Type de Réacteur",
width = 12
)
)
),
tabItem(
tabName = "mapReactor",
fluidRow(  # Ajoutez la virgule manquante ici
box(
leafletOutput("reactorMap"),
title = "Reactor Map",
width = 12
)
)
)
)
)
server <- function(input, output) {
output$reactorMap <- renderLeaflet({
leaflet(df) %>%
addTiles() %>%
addMarkers(
lng = ~Longitude,
lat = ~Latitude,
popup = ~Name
)
})
output$plotCapacity <- renderPlot({
capacityPlot()
})
output$plotReactor <- renderPlot({
reactorType()
})
}
main()
